# docker-compose.yml

services:
  # ────────── 1. Postgres staging DB ──────────
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"        # expose only if you want remote psql
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5

  # ────────── 2. MinIO object store ──────────
  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"        # S3 API
      - "9001:9001"        # Console UI
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Auto-create the bucket `raw` exactly once at startup
  mc:
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}); do sleep 2; done &&
      mc mb local/raw || true
      "
    depends_on:
      minio:
        condition: service_healthy

  # ────────── 3. Prefect 2 agent ──────────
  # add this new service
  prefect-server:
    image: prefecthq/prefect:3-latest
    command: prefect server start
    environment:
      PREFECT_UI_BACKEND: server
    ports:
      - "4200:4200"      # Prefect UI/API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  pgdata:
  minio-data:
  prefect-data:
